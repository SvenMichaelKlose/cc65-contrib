FEATURES {
    STARTADDRESS: default = $02a5;
}

SYMBOLS {
#    __LOADADDR__:  type = import;
#    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0800; # 0.5k stack
    __HIMEM__:     type = weak, value = $D000;
}

MEMORY {
    ZP: start = $02, size = $1A, type = rw;
    RAM: start = $02A5, size = $5B, define = yes, fill = yes, file = %O;
    BASICVECTORS: start = $0300, size = $04, define = yes, file = %O;
    # The "start" attribute for the RAM memory area of the CBM systems is 
    # two less than the actual start of the loader RAM to account for the 
    # two bytes load address that is needed on disk and supplied by the 
    # startup code.
}
SEGMENTS {
    HEAD: load = RAM, type = ro;
    CODE: load = RAM, type = ro;
    DATA: load = RAM, type = rw;
    VECTORS: load = BASICVECTORS, type = rw;
    RODATA: load = RAM, type = ro;
    BSS: load = RAM, type = bss, define = yes;
    ZEROPAGE: load = ZP, type = zp;
}
FEATURES {
    CONDES: segment = RODATA,
    type = constructor,
    label = __CONSTRUCTOR_TABLE__,
    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
    type = destructor,
    label = __DESTRUCTOR_TABLE__,
    count = __DESTRUCTOR_COUNT__;
}

