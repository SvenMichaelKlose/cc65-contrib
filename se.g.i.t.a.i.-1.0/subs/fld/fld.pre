 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
struct __vic2 {
unsigned char spr0_x; 
unsigned char spr0_y; 
unsigned char spr1_x; 
unsigned char spr1_y; 
unsigned char spr2_x; 
unsigned char spr2_y; 
unsigned char spr3_x; 
unsigned char spr3_y; 
unsigned char spr4_x; 
unsigned char spr4_y; 
unsigned char spr5_x; 
unsigned char spr5_y; 
unsigned char spr6_x; 
unsigned char spr6_y; 
unsigned char spr7_x; 
unsigned char spr7_y; 
unsigned char spr_hi_x; 
unsigned char ctrl1; 
unsigned char rasterline; 
unsigned char strobe_x; 
unsigned char strobe_y; 
unsigned char spr_ena; 
unsigned char ctrl2; 
unsigned char spr_exp_y; 
unsigned char addr; 
unsigned char irr; 
unsigned char imr; 
unsigned char spr_bg_prio; 
unsigned char spr_mcolor; 
unsigned char spr_exp_x; 
unsigned char spr_coll; 
unsigned char spr_bg_coll; 
unsigned char bordercolor; 
unsigned char bgcolor0; 
unsigned char bgcolor1; 
unsigned char bgcolor2; 
unsigned char bgcolor3; 
unsigned char spr_mcolor0; 
unsigned char spr_mcolor1; 
unsigned char spr0_color; 
unsigned char spr1_color; 
unsigned char spr2_color; 
unsigned char spr3_color; 
unsigned char spr4_color; 
unsigned char spr5_color; 
unsigned char spr6_color; 
unsigned char spr7_color; 
 
unsigned char x_kbd; 
unsigned char clock; 
};
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
struct __sid_voice {
unsigned freq; 
unsigned pw; 
unsigned char ctrl; 
unsigned char ad; 
unsigned char sr; 
};
struct __sid {
struct __sid_voice v1; 
struct __sid_voice v2; 
struct __sid_voice v3; 
unsigned flt_freq; 
unsigned char flt_ctrl; 
unsigned char amp; 
unsigned char ad1; 
unsigned char ad2; 
unsigned char noise; 
unsigned char read3; 
};
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
struct __6526 {
unsigned char pra; 
unsigned char prb; 
unsigned char ddra; 
unsigned char ddrb; 
unsigned char ta_lo; 
unsigned char ta_hi; 
unsigned char tb_lo; 
unsigned char tb_hi; 
unsigned char tod_10; 
unsigned char tod_sec; 
unsigned char tod_min; 
unsigned char tod_hour; 
unsigned char sdr; 
unsigned char icr; 
unsigned char cra; 
unsigned char crb; 
};
 
 
 
 
 
 
unsigned char get_ostype (void);
 
 
 
 
 
 
extern unsigned char _curunit; 
extern unsigned char _filetype; 
 
 
 
 
 
 
 
 
struct cbm_dirent {
char name[17]; 
unsigned int size; 
unsigned char type;
unsigned char access;
};
 
 
 
unsigned char __fastcall__ get_tv (void);
 
 
 
 
 
 
void __fastcall__ cbm_k_setlfs (unsigned char LFN, unsigned char DEV,
unsigned char SA);
void __fastcall__ cbm_k_setnam (const char* Name);
unsigned int __fastcall__ cbm_k_load(unsigned char flag, unsigned addr);
unsigned char __fastcall__ cbm_k_save(unsigned int start, unsigned int end);
unsigned char __fastcall__ cbm_k_open (void);
void __fastcall__ cbm_k_close (unsigned char FN);
unsigned char __fastcall__ cbm_k_readst (void);
unsigned char __fastcall__ cbm_k_chkin (unsigned char FN);
unsigned char __fastcall__ cbm_k_ckout (unsigned char FN);
unsigned char __fastcall__ cbm_k_basin (void);
void __fastcall__ cbm_k_bsout (unsigned char C);
void __fastcall__ cbm_k_clrch (void);
 
 
 
 
unsigned int cbm_load (const char* name, unsigned char device, void* data);
 
unsigned char cbm_save (const char* name, unsigned char device,
const void* data, unsigned int size);
 
unsigned char __fastcall__ cbm_open (unsigned char lfn,
unsigned char device,
unsigned char sec_addr,
const char* name);
 
void __fastcall__ cbm_close (unsigned char lfn);
 
int __fastcall__ cbm_read (unsigned char lfn, void* buffer, unsigned int size);
 
int __fastcall__ cbm_write (unsigned char lfn, void* buffer, unsigned int size);
 
unsigned char __fastcall__ cbm_opendir (unsigned char lfn, unsigned char device);
 
unsigned char __fastcall__ cbm_readdir (unsigned char lfn, struct cbm_dirent* l_dirent);
 
void __fastcall__ cbm_closedir (unsigned char lfn);
 
 
void fld(void){
asm("lda #%b", 0x32);
asm("cmp %w", (*(struct __vic2*)0xD000).rasterline);
}
