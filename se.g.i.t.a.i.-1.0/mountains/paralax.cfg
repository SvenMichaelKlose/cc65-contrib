FEATURES {
    STARTADDRESS: default = $0801;
}

SYMBOLS {
    __LOADADDR__:  type = import;
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0100; # 0.5k stack
    __HIMEM__:     type = weak, value = $D000;
}
MEMORY {    
	ZP:  start = $0002, size = $002c, type = rw, define = yes;
	#ZP2:  start = $0002, size = $001A, type = rw, define = yes;
	LORAM: start = $0400, size = $03e8;
#  MAIN:  start = $07ff, size = $c801, define=yes;

    LOADADDR: file = %O,               start = %S - 2,          size = $0002;
    HEADER:   file = %O, define = yes, start = %S,              size = $000D;
    MAIN:     file = %O, define = yes, start = __HEADER_LAST__, size = $c800 - __HEADER_LAST__, fill = yes;

  DUMMYRAM: start = $d000, size=$0800, fill=yes, define = yes;
  COLORRAM: start = $d800, size=$0800, fill=yes, define = yes;
  HIRAM:  start = $e000, size = $2000, define=yes;
}

SEGMENTS {
	ZEROPAGE: load = ZP, type = zp;	
	SCREEN1: load = LORAM,type = bss, define=yes;
	
    LOADADDR: load = LOADADDR, type = ro;
    EXEHDR:   load = HEADER,   type = ro;

	STARTUP: load = MAIN, type = ro;
	BARCODE: load = MAIN, type = ro;
	SCREEN2: load = MAIN, start=$0c00, type = rw, define=yes;
	MUSIC: load = MAIN, start=$1000, type = ro, define =yes;
	CLOWDSPRBUF: load = MAIN, start=$2e00, type = rw, define=yes;
	BERGCHAR: load = MAIN, start=$3000, type = ro, define=yes;
	BERGSPR: load = MAIN, start=$3600, type = ro, define=yes;
	SUNCHAR: load = MAIN, start=$3800, type = ro, define=yes;
	INIT:   load = MAIN, start=$4000, type = ro, define = yes, optional = yes;
	CODE:   load = MAIN, type = ro;
	CLOWDSPR: load= MAIN, type = ro, define=yes;
	RODATA: load = MAIN, type = ro, define = yes;
	DATA:   load = MAIN, type = rw, define = yes;
	ONCE:     load = MAIN,     type = ro,  define   = yes;
	BSS:    load = MAIN, type = bss, define = yes;
	HEAP: load = MAIN, type = bss, define=yes, optional=yes;
	SPDCODE2: load = HIRAM, type = bss, define=yes, optional=yes;
}

FEATURES {
  CONDES: segment = INIT,
	  type = constructor,
	  label = __CONSTRUCTOR_TABLE__,
	  count = __CONSTRUCTOR_COUNT__;
  CONDES: segment = RODATA,
	  type = destructor,
	  label = __DESTRUCTOR_TABLE__,
	  count = __DESTRUCTOR_COUNT__;
  CONDES: segment = RODATA,
	  type = interruptor,
	  label = __INTERRUPTOR_TABLE__,
	  count = __INTERRUPTOR_COUNT__;
}
